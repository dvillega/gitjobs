package org.me.education;
// Generated May 1, 2014 1:30:59 AM by Hibernate Tools 3.6.0


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * EducInstitute generated by hbm2java
 */
@Entity
@Table(name="educ_institute"
    ,schema="public"
)
public class EducInstitute  implements java.io.Serializable {


     private int id;
     private String name;
     private Set userProfiles = new HashSet(0);
     private Set sections = new HashSet(0);

    public EducInstitute() {
    }

	
    public EducInstitute(int id, String name) {
        this.id = id;
        this.name = name;
    }
    public EducInstitute(int id, String name, Set userProfiles, Set sections) {
       this.id = id;
       this.name = name;
       this.userProfiles = userProfiles;
       this.sections = sections;
    }
   
     @Id 

    
    @Column(name="id", unique=true, nullable=false)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }

    
    @Column(name="name", nullable=false)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="user_educ_map", schema="public", uniqueConstraints={@UniqueConstraint(columnNames="educ_id"), @UniqueConstraint(columnNames="user_id")}, joinColumns = { 
        @JoinColumn(name="educ_id", unique=true, nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="user_id", unique=true, nullable=false, updatable=false) })
    public Set getUserProfiles() {
        return this.userProfiles;
    }
    
    public void setUserProfiles(Set userProfiles) {
        this.userProfiles = userProfiles;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="offers_course", schema="public", joinColumns = { 
        @JoinColumn(name="educ_institute_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="section_id", nullable=false, updatable=false) })
    public Set getSections() {
        return this.sections;
    }
    
    public void setSections(Set sections) {
        this.sections = sections;
    }




}


